<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.0">Jekyll</generator><link href="https://teju85.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://teju85.github.io/blog/" rel="alternate" type="text/html" /><updated>2018-01-13T14:39:45+05:30</updated><id>https://teju85.github.io/blog/</id><title type="html">Quagmire</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="https://teju85.github.io/blog/jekyll/update/2018/01/13/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2018-01-13T11:48:35+05:30</published><updated>2018-01-13T11:48:35+05:30</updated><id>https://teju85.github.io/blog/jekyll/update/2018/01/13/welcome-to-jekyll</id><content type="html" xml:base="https://teju85.github.io/blog/jekyll/update/2018/01/13/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Building ‘mu’ on cygwin</title><link href="https://teju85.github.io/blog/emacs-lisp/programming/tools/2018/01/07/building-mu-on-cygwin.html" rel="alternate" type="text/html" title="Building 'mu' on cygwin" /><published>2018-01-07T13:59:00+05:30</published><updated>2018-01-07T13:59:00+05:30</updated><id>https://teju85.github.io/blog/emacs-lisp/programming/tools/2018/01/07/building-mu-on-cygwin</id><content type="html" xml:base="https://teju85.github.io/blog/emacs-lisp/programming/tools/2018/01/07/building-mu-on-cygwin.html">&lt;p&gt;Recently, I wanted to play with the popular ‘mu’ tool for indexing my mails. Started with Matthias’ [mu-on-cygwin][https://frosch03.de/blog/2016/05/mu4e-within-cygwin.html] blog. Interestingly, even after following the steps he mentions there, I was welcomed with the below error!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;  CXX      utils.lo
utils.cc: In &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; ‘std::string Mux::format&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;const char&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;, ...&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;’:
utils.cc:187:44: error: ‘vasprintf’ was not declared &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;this scope
   const auto res &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; vasprintf &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&amp;amp;s, frm, args&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                                            ^
utils.cc: In &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; ‘std::string Mux::date_to_time_t_string&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;const string&amp;amp;, bool&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;’:
utils.cc:313:52: error: ‘strptime’ was not declared &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;this scope
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;strptime &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;date.c_str&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;%Y%m%d%H%M%S&quot;&lt;/span&gt;, &amp;amp;tbuf&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                                                    ^
make[3]: &lt;span class=&quot;k&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Makefile:749: utils.lo] Error 1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I had to do the following hack in order to get this working on my cygwin-env. (assuming you’re already inside ‘mu’)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;lib/parser
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/^#define GNU_SOURCE/#define _GNU_SOURCE/'&lt;/span&gt; utils.cc  &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; tmp
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mv &lt;/span&gt;tmp utils.cc &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After this, the compilation and installation happened without any errors. Hope this helps others, in case they get stuck with the same error.&lt;/p&gt;</content><author><name></name></author><summary type="html">Recently, I wanted to play with the popular ‘mu’ tool for indexing my mails. Started with Matthias’ [mu-on-cygwin][https://frosch03.de/blog/2016/05/mu4e-within-cygwin.html] blog. Interestingly, even after following the steps he mentions there, I was welcomed with the below error!</summary></entry></feed>