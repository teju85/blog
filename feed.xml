<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="https://teju85.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://teju85.github.io/blog/" rel="alternate" type="text/html" /><updated>2020-03-10T09:17:16+05:30</updated><id>https://teju85.github.io/blog/feed.xml</id><title type="html">Quagmire</title><subtitle>Stuff I find cool/useful</subtitle><entry><title type="html">Drop your tools - Does Expertise have a dark side?</title><link href="https://teju85.github.io/blog/2020/01/18/drop-your-tools.html" rel="alternate" type="text/html" title="Drop your tools - Does Expertise have a dark side?" /><published>2020-01-18T00:00:00+05:30</published><updated>2020-01-18T00:00:00+05:30</updated><id>https://teju85.github.io/blog/2020/01/18/drop-your-tools</id><content type="html" xml:base="https://teju85.github.io/blog/2020/01/18/drop-your-tools.html">&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;This is my notes after watching Dr. Sean Brady’s Keynote talk at LCA-2020. The full
recorded video can be found &lt;a href=&quot;https://www.youtube.com/watch?v=Yv4tI6939q0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;
&lt;p&gt;Expertise is certainly necessary for us to be better at our jobs and do less
mistakes. However, there are cases when expertise can &lt;a href=&quot;https://en.wikipedia.org/wiki/Negative_priming&quot;&gt;negatively prime&lt;/a&gt;
us down the wrong solution path! He uses the examples of
&lt;a href=&quot;https://www.nytimes.com/1978/01/19/archives/new-jersey-pages-coliseum-roof-collapses-at-hartford-civic-center.html&quot;&gt;Hartford convention center collapse&lt;/a&gt;
and the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mann_Gulch_fire&quot;&gt;Mann Gulch wildfire&lt;/a&gt; to
show that in the moments of pressure we continue to cling onto our expertise
despite of all the warning signs to the contrary. In some scenarios, our
expertise itself can be the greatest source of negative priming since we use it
sub-consciously (and automatically) at all times!&lt;/p&gt;

&lt;p&gt;When we end up trying to solve a problem that’s slightly outside our expertise,
even if we know that our “tools” aren’t giving us the right solution, we continue
to hold onto them (just like the firefighters of Mann Gulch did)! It is hard for
all of us to accept the fact that the tools we currently use are not the right
ones for the job.&lt;/p&gt;

&lt;p&gt;Some nice quotes from this talk:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;“The greatest obstacle to knowledge is not ignorance. It is the illusion of knowledge”&lt;/li&gt;
  &lt;li&gt;“We all see the world with the prism of our expertise”&lt;/li&gt;
  &lt;li&gt;“In pursuit of knowledge, everyday something is acquired. In the pursuit of wisdom, everyday something is dropped”&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="psychology" /><summary type="html">Introduction This is my notes after watching Dr. Sean Brady’s Keynote talk at LCA-2020. The full recorded video can be found here.</summary></entry><entry><title type="html">RAPIDS ML dev setup</title><link href="https://teju85.github.io/blog/2019/12/18/rapids-ml-dev-setup.html" rel="alternate" type="text/html" title="RAPIDS ML dev setup" /><published>2019-12-18T00:00:00+05:30</published><updated>2019-12-18T00:00:00+05:30</updated><id>https://teju85.github.io/blog/2019/12/18/rapids-ml-dev-setup</id><content type="html" xml:base="https://teju85.github.io/blog/2019/12/18/rapids-ml-dev-setup.html">&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;This blog post is an attempt to simplify the process of setting up of an
environment for &lt;a href=&quot;https://github.com/rapidsai/cuml&quot;&gt;cuML&lt;/a&gt; development. If your
environment already has docker and you have access to building images and
running containers using them, then the Dockerfile shipped with cuML repo is the
easiest way to get started.&lt;/p&gt;

&lt;h3 id=&quot;pre-reqs&quot;&gt;Pre-reqs&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Install the &lt;a href=&quot;https://developer.nvidia.com/cuda-downloads&quot;&gt;cuda toolkit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Download the bash script from the github gist &lt;a href=&quot;https://gist.github.com/teju85/51ff12886f5ae9967a4cab6fd0376953&quot;&gt;here&lt;/a&gt; and save it as &lt;code class=&quot;highlighter-rouge&quot;&gt;rapids-setup&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;~10-15GB of free disk-space.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;instructions&quot;&gt;Instructions&lt;/h3&gt;
&lt;p&gt;Run the bash script to install cuML and its dependencies. Recommended approach
is to use &lt;a href=&quot;https://www.anaconda.com/&quot;&gt;anaconda&lt;/a&gt;. This script installs all the
needed dependencies in a stand-alone folder and thus does not need root access.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;bash ./rapids-setup installCuml&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;At the end, it prints a couple of environment variables to be set in your bash
terminal. Execute them and you should now be ready to run tests and develop!&lt;/p&gt;</content><author><name></name></author><category term="cuda" /><category term="rapids" /><category term="cuml" /><summary type="html">Introduction This blog post is an attempt to simplify the process of setting up of an environment for cuML development. If your environment already has docker and you have access to building images and running containers using them, then the Dockerfile shipped with cuML repo is the easiest way to get started.</summary></entry><entry><title type="html">Teditor v1.6.0</title><link href="https://teju85.github.io/blog/2019/11/30/teditor.html" rel="alternate" type="text/html" title="Teditor v1.6.0" /><published>2019-11-30T00:00:00+05:30</published><updated>2019-11-30T00:00:00+05:30</updated><id>https://teju85.github.io/blog/2019/11/30/teditor</id><content type="html" xml:base="https://teju85.github.io/blog/2019/11/30/teditor.html">&lt;h3 id=&quot;teditor-v160&quot;&gt;Teditor v1.6.0!&lt;/h3&gt;
&lt;p&gt;Glad to announce the release of the next version of teditor: v1.6.0. It
can be found &lt;a href=&quot;https://github.com/teju85/teditor/releases/tag/1.6.0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;changelog&quot;&gt;Changelog&lt;/h3&gt;
&lt;p&gt;Changes/features in this release:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;grep mode&lt;/li&gt;
  &lt;li&gt;Support for working with remote files&lt;/li&gt;
  &lt;li&gt;Simplified indent/unindent logic&lt;/li&gt;
  &lt;li&gt;File history storage syntax update in light of remote file syntax&lt;/li&gt;
  &lt;li&gt;Enabled keep-lines/remove-lines command and also their undo/redo&lt;/li&gt;
  &lt;li&gt;Alert users about working on remote buffers&lt;/li&gt;
  &lt;li&gt;Case insensitive searching via a rc option&lt;/li&gt;
  &lt;li&gt;Various fixes to improve perf on remote buffers (eg: usage of DirCache)&lt;/li&gt;
  &lt;li&gt;Various bug fixes and addition of utility methods&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;grep-mode&quot;&gt;grep mode&lt;/h3&gt;
&lt;p&gt;This is similar to the grep mode in emacs. &lt;code class=&quot;highlighter-rouge&quot;&gt;M-x grep &amp;lt;enter&amp;gt;&lt;/code&gt; type the regex
to search for and the file/dir where to search and then press enter. This should
open a buffer with all grep results highlighted. From then onwards, pressing
enter on each result of grep will take you to that file and line (similar to
what happens in grep mode of emacs).&lt;/p&gt;</content><author><name></name></author><category term="teditor" /><summary type="html">Teditor v1.6.0! Glad to announce the release of the next version of teditor: v1.6.0. It can be found here.</summary></entry><entry><title type="html">Teditor v1.5.0</title><link href="https://teju85.github.io/blog/2019/11/19/teditor.html" rel="alternate" type="text/html" title="Teditor v1.5.0" /><published>2019-11-19T00:00:00+05:30</published><updated>2019-11-19T00:00:00+05:30</updated><id>https://teju85.github.io/blog/2019/11/19/teditor</id><content type="html" xml:base="https://teju85.github.io/blog/2019/11/19/teditor.html">&lt;h3 id=&quot;teditor-v150&quot;&gt;Teditor v1.5.0!&lt;/h3&gt;
&lt;p&gt;Glad to announce the release of the next version of teditor: v1.5.0. It
can be found &lt;a href=&quot;https://github.com/teju85/teditor/releases/tag/1.5.0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;changelog&quot;&gt;Changelog&lt;/h3&gt;
&lt;p&gt;Changes/features in this release:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Brand new Option interface to customize editor behavior via rc-file&lt;/li&gt;
  &lt;li&gt;Revamp of commandline parsing to print help message, pass rc-file, etc&lt;/li&gt;
  &lt;li&gt;Track version info from the commandline&lt;/li&gt;
  &lt;li&gt;Bug fixes to removeRegion functionality&lt;/li&gt;
  &lt;li&gt;Support in dir-mode for opening remote directories&lt;/li&gt;
  &lt;li&gt;Reorg of cmds and modes source files to something more aptly named locations&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;commandline-options&quot;&gt;Commandline options&lt;/h3&gt;
&lt;p&gt;From now onwards, commandline options for the editor are documented and can be
accessed via the following command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;teditor &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;customizing-editor-via-rc-files&quot;&gt;Customizing editor via rc files&lt;/h3&gt;
&lt;p&gt;Easiest way is to create a fresh rc file via the &lt;code class=&quot;highlighter-rouge&quot;&gt;-dump&lt;/code&gt; option and then edit
it to customize as per your needs.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;teditor &lt;span class=&quot;nt&quot;&gt;-dump&lt;/span&gt; /path/to/rc/file
&lt;span class=&quot;c&quot;&gt;# open and edit this file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><category term="teditor" /><summary type="html">Teditor v1.5.0! Glad to announce the release of the next version of teditor: v1.5.0. It can be found here.</summary></entry><entry><title type="html">Teditor v1.4.0</title><link href="https://teju85.github.io/blog/2019/11/18/teditor.html" rel="alternate" type="text/html" title="Teditor v1.4.0" /><published>2019-11-18T00:00:00+05:30</published><updated>2019-11-18T00:00:00+05:30</updated><id>https://teju85.github.io/blog/2019/11/18/teditor</id><content type="html" xml:base="https://teju85.github.io/blog/2019/11/18/teditor.html">&lt;h3 id=&quot;teditor-v140&quot;&gt;Teditor v1.4.0!&lt;/h3&gt;
&lt;p&gt;Glad to announce the release of the next version of teditor: v1.4.0. It
can be found &lt;a href=&quot;https://github.com/teju85/teditor/releases/tag/1.4.0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;changelog&quot;&gt;Changelog&lt;/h3&gt;
&lt;p&gt;Changes/features in this release:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Complete removal of multiple-cursors from the editor. (reason below)&lt;/li&gt;
  &lt;li&gt;Bug fixes to highlighting the empty lines under selection.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;why-no-multiple-cursors&quot;&gt;Why no Multiple Cursors?&lt;/h3&gt;
&lt;p&gt;There are multiple reasons for this:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;We’ll introduce more macro-like interface that’ll void the need for such a
thing. Many blogs have been written about this &lt;a href=&quot;https://medium.com/@schtoeffel/you-don-t-need-more-than-one-cursor-in-vim-2c44117d51db&quot;&gt;here&lt;/a&gt;
and &lt;a href=&quot;https://nullprogram.com/blog/2017/09/07/&quot;&gt;here&lt;/a&gt;. Thus I do not want to
elaborate further on this.&lt;/li&gt;
  &lt;li&gt;In future, underlying implementation of buffers can be optimized very easily
without multiple-cursors support &lt;a href=&quot;https://nullprogram.com/blog/2017/09/07/&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="teditor" /><summary type="html">Teditor v1.4.0! Glad to announce the release of the next version of teditor: v1.4.0. It can be found here.</summary></entry><entry><title type="html">The subtle art of not giving a f**k</title><link href="https://teju85.github.io/blog/2019/11/13/subtle-art-of-not-giving-a-fk.html" rel="alternate" type="text/html" title="The subtle art of not giving a f**k" /><published>2019-11-13T00:00:00+05:30</published><updated>2019-11-13T00:00:00+05:30</updated><id>https://teju85.github.io/blog/2019/11/13/subtle-art-of-not-giving-a-fk</id><content type="html" xml:base="https://teju85.github.io/blog/2019/11/13/subtle-art-of-not-giving-a-fk.html">&lt;h3 id=&quot;the-subtle-art-of-not-giving-a-fk&quot;&gt;The subtle art of not giving a f**k&lt;/h3&gt;
&lt;p&gt;By Mark Manson. This book can be found &lt;a href=&quot;https://www.amazon.com/Subtle-Art-Not-Giving-Counterintuitive/dp/0062457713&quot;&gt;here&lt;/a&gt;.
Mark talks about how to give our limited f**ks to only where they matter the most
and thereby showing us a way to leader happier lives.&lt;/p&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;backwards law&lt;/li&gt;
  &lt;li&gt;Wanting positive experience is a negative experience; accepting negative experience is a positive experience.&lt;/li&gt;
  &lt;li&gt;Everything worthwhile in life is won through surmounting the associated negative experience.&lt;/li&gt;
  &lt;li&gt;Any attempt to escape the negative, to avoid it or quash it or silence it, only backfires.&lt;/li&gt;
  &lt;li&gt;The avoidance of suffering is a form of suffering.&lt;/li&gt;
  &lt;li&gt;The avoidance of struggle is a struggle.&lt;/li&gt;
  &lt;li&gt;The denial of failure is a failure.&lt;/li&gt;
  &lt;li&gt;Hiding what is shameful is itself a form of shame.&lt;/li&gt;
  &lt;li&gt;not giving a fuck doesn’t mean being indifferent, it means being comfortable with being different.&lt;/li&gt;
  &lt;li&gt;to not give a fuck about adversity, one must first have something more important than this adversity to give a fuck about.&lt;/li&gt;
  &lt;li&gt;maturity is what happens when you decide to give a fuck to only things that are fuckworthy.&lt;/li&gt;
  &lt;li&gt;the only way to overcome pain is first to learn how to bear it.&lt;/li&gt;
  &lt;li&gt;happiness is not a solvable equation. Dissatisfaction, suffering and uneasiness are inherent parts of our lives.&lt;/li&gt;
  &lt;li&gt;there’s no life without problems. Thus, hope for a life with good problems.&lt;/li&gt;
  &lt;li&gt;we find happiness by solving problems. Thus happiness is an action.&lt;/li&gt;
  &lt;li&gt;2 main ways we fuck our lives are via: denial and victim-mentality.&lt;/li&gt;
  &lt;li&gt;negative emotions mean a call to action. Positive ones are an indication of something done right. But that doesn’t mean the emotions are always correct. We should make a habit of questioning our emotions.&lt;/li&gt;
  &lt;li&gt;whatever makes us feel good will also inevitably make us feel bad.&lt;/li&gt;
  &lt;li&gt;nobody asks themselves “what pain do they want in their life? For what cause are they willing to struggle?”. The answer to this question is typically the determinant of one’s life.&lt;/li&gt;
  &lt;li&gt;solution to pain and suffering is the acceptance of it and not their denial.&lt;/li&gt;
  &lt;li&gt;who you are is defined by what you are willing to struggle for.&lt;/li&gt;
  &lt;li&gt;true measurement of one’s self-worth is not based on how one feels about one’s positive experiences, but how they fell about their negative ones.&lt;/li&gt;
  &lt;li&gt;under negative experiences, many folks become entitled: either they are special and everybody is stupid or everybody’s smart and they are stupid. In both cases they are the special ones.&lt;/li&gt;
  &lt;li&gt;vast majority of life is unextraordinary. However, media always bombards us with those exceptional ones (good or bad) only. This leads to entitlement issues.&lt;/li&gt;
  &lt;li&gt;people become exceptional because they are obsessed with improvement and beacuse they believe that they are not that great currently. It is actually anti-entitlement!&lt;/li&gt;
  &lt;li&gt;living a normal life, making friends, reading a good book, spending time with your family. These are all ordinary things. But maybe they are ordinary beacuse these are the ones we actually want.&lt;/li&gt;
  &lt;li&gt;self-awareness is like an onion. The more you peel the more you start crying at inappropriate times.&lt;/li&gt;
  &lt;li&gt;we control what our problems mean by choosing the standard we use to measure them&lt;/li&gt;
  &lt;li&gt;we will eventually compare ourselves with others. So, the real question is by what standard are we going to compare ourselves to others and also what values to use to set this standard?&lt;/li&gt;
  &lt;li&gt;the following values create really poor problems for people:
    &lt;ul&gt;
      &lt;li&gt;pleasure&lt;/li&gt;
      &lt;li&gt;material success&lt;/li&gt;
      &lt;li&gt;always being right&lt;/li&gt;
      &lt;li&gt;always staying positive&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;because these things are really just the side effects of having good values. They by themselves are just empty highs.&lt;/li&gt;
  &lt;li&gt;set good values/metrics for yourselves. This helps you give fucks only where it matters. Thus in turn gets you to a state of well-being whose side effects are happiness, pleasure and success.&lt;/li&gt;
  &lt;li&gt;depending upon whether we chose the problems or it was forced down upon us, we will feel empowered or miserable.&lt;/li&gt;
  &lt;li&gt;we cannot control what happens to us. But we can always control how we interpret it and respond to it.&lt;/li&gt;
  &lt;li&gt;accepting responsibility for our problems is the first step in solving them.&lt;/li&gt;
  &lt;li&gt;we are responsible for experiences which are not our fault at all. This is life.&lt;/li&gt;
  &lt;li&gt;no one else is responsible for your situation but you.&lt;/li&gt;
  &lt;li&gt;fault is past tense. Responsibility is present and future tense.&lt;/li&gt;
  &lt;li&gt;others can be blamed for how we feel, but they can’t be held responsible for how we feel.&lt;/li&gt;
  &lt;li&gt;growth is an endlessly iterative process. When we learn something new, we go from wrong to slightly less wrong.&lt;/li&gt;
  &lt;li&gt;analogy to ML!
    &lt;ul&gt;
      &lt;li&gt;our values are optimisation functions&lt;/li&gt;
      &lt;li&gt;our actions = fwd prop&lt;/li&gt;
      &lt;li&gt;resulting emotions and thoughts = bwd prop&lt;/li&gt;
      &lt;li&gt;life itself = weights to be optimised&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;nothing is certain until it has already happened and even then it’s debatable. So, certainty is enemy of growth.&lt;/li&gt;
  &lt;li&gt;all beliefs are wrong. Some are just less wrong than others.&lt;/li&gt;
  &lt;li&gt;remember how the telephone game works? (whisper what you heard into next person’s ears) our memories are just like that!&lt;/li&gt;
  &lt;li&gt;our beliefs are malleable and our memories are horribly unreliable.&lt;/li&gt;
  &lt;li&gt;uncertainty removes the need to judge others (as well as ourselves!) and to have biased views.&lt;/li&gt;
  &lt;li&gt;unless we are uncertain about how successful we’ll be, we won’t be able to strive towards it&lt;/li&gt;
  &lt;li&gt;the openness to being wrong must exist in order for us to grow or change ourselves.&lt;/li&gt;
  &lt;li&gt;Manson’s law of avoidance: the more something threatens your identity, the more you’ll avoid it.&lt;/li&gt;
  &lt;li&gt;how to breed a little uncertainty in us:
    &lt;ul&gt;
      &lt;li&gt;what if I’m wrong?&lt;/li&gt;
      &lt;li&gt;what would it mean if I were wrong?&lt;/li&gt;
      &lt;li&gt;would being wrong create a better or worse problem than the current one for myself and others?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;as kids we fall many times while trying to walk. But we just get up and try again. However, as adults we somehow end up learning to avoid failures!&lt;/li&gt;
  &lt;li&gt;if someone is better than us at something, then he has failed at it more times than we are.&lt;/li&gt;
  &lt;li&gt;if we are unwilling to fail then we’ll also be unwilling to succeed.&lt;/li&gt;
  &lt;li&gt;for many of us, our proudest moments come at the face of greatest adversity.&lt;/li&gt;
  &lt;li&gt;rather than numbing it out, learn to withstand the pain you’ve chosen.&lt;/li&gt;
  &lt;li&gt;action isn’t just the effect of motivation, it’s also the cause of it. So always “do something”.&lt;/li&gt;
  &lt;li&gt;motivation-loop: inspiration -&amp;gt; motivation -&amp;gt; action -&amp;gt; inspiration …&lt;/li&gt;
  &lt;li&gt;we are defined by what we choose to reject&lt;/li&gt;
  &lt;li&gt;part of becoming honest is to develop the ability to say and receive ‘no’&lt;/li&gt;
  &lt;li&gt;acts of love are valid only if they’re performed unconditionally and without expectations&lt;/li&gt;
  &lt;li&gt;without conflict there can be no trust&lt;/li&gt;
  &lt;li&gt;breadth helps realize what is worth your faculty. Depth is where the gold is buried. You’ve to commit yourself and dig deeper to find it. This applies to relationships, careers and life in general.&lt;/li&gt;
  &lt;li&gt;death is the light by which the shadow of all of life’s meanings are measured&lt;/li&gt;
  &lt;li&gt;death is inevitable. If we come to terms with it, then we suddenly become free to choose greater values to measure ourselves against.&lt;/li&gt;
  &lt;li&gt;without the acknowledge of the presence of death, superficial will seem important and important will seem superficial.&lt;/li&gt;
  &lt;li&gt;death is the correct answer to all the important life questions we never dare asking&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="book-notes" /><summary type="html">The subtle art of not giving a f**k By Mark Manson. This book can be found here. Mark talks about how to give our limited f**ks to only where they matter the most and thereby showing us a way to leader happier lives.</summary></entry><entry><title type="html">Writing a 3x3 sudoku solver in C++</title><link href="https://teju85.github.io/blog/2019/08/23/solving-sudoku.html" rel="alternate" type="text/html" title="Writing a 3x3 sudoku solver in C++" /><published>2019-08-23T00:00:00+05:30</published><updated>2019-08-23T00:00:00+05:30</updated><id>https://teju85.github.io/blog/2019/08/23/solving-sudoku</id><content type="html" xml:base="https://teju85.github.io/blog/2019/08/23/solving-sudoku.html">&lt;p&gt;&lt;a href=&quot;https://gist.github.com/teju85/2cfc3934f3697aaff324b77e693010a0&quot;&gt;Here&lt;/a&gt; is a
short c++ code to solve the popular 3x3 sudoku puzzle. Follow the instructions
at the top of the source file to compile and run the code. It only uses the
logical elimination-based method to converge to the right solution. This appears
to solve even the “hard” problems from &lt;a href=&quot;https://websudoku.com&quot;&gt;websudoku&lt;/a&gt; portal.&lt;/p&gt;</content><author><name></name></author><category term="cpp" /><category term="puzzles" /><summary type="html">Here is a short c++ code to solve the popular 3x3 sudoku puzzle. Follow the instructions at the top of the source file to compile and run the code. It only uses the logical elimination-based method to converge to the right solution. This appears to solve even the “hard” problems from websudoku portal.</summary></entry><entry><title type="html">Handling of enum overflows in C/C++</title><link href="https://teju85.github.io/blog/2019/08/21/enums.html" rel="alternate" type="text/html" title="Handling of enum overflows in C/C++" /><published>2019-08-21T00:00:00+05:30</published><updated>2019-08-21T00:00:00+05:30</updated><id>https://teju85.github.io/blog/2019/08/21/enums</id><content type="html" xml:base="https://teju85.github.io/blog/2019/08/21/enums.html">&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;Save the below code in a file named &lt;code class=&quot;highlighter-rouge&quot;&gt;enum.c&lt;/code&gt; and try to compile it using the
following command: &lt;code class=&quot;highlighter-rouge&quot;&gt;gcc enum.c -o enum &amp;amp;&amp;amp; ./enum&lt;/code&gt;. This will give the following
error:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;enum.c:8:3: error: overflow in enumeration values
   _4
   ^
enum.c: In function ‘main’:
enum.c:11:48: error: ‘FourBytes’ undeclared (first use in this function)
   printf(&quot;sizeof(FourBytes)=%d\n&quot;, (int)sizeof(FourBytes));
                                                ^
enum.c:11:48: note: each undeclared identifier is reported only once for each function it appears in
enum.c:12:49: error: ‘EightBytes’ undeclared (first use in this function)
   printf(&quot;sizeof(EightBytes)=%d\n&quot;, (int)sizeof(EightBytes));&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, if you save this same code as &lt;code class=&quot;highlighter-rouge&quot;&gt;enum.cpp&lt;/code&gt; and compile it as:
&lt;code class=&quot;highlighter-rouge&quot;&gt;g++ enum.cpp -o enum &amp;amp;&amp;amp; ./enum&lt;/code&gt;. This will compile successfully and gives the
following output!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sizeof(FourBytes)=4
sizeof(EightBytes)=8&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Yes! The C++ compiler automatically takes care of overflows by ‘upgrading’ the
enum to be of 8 bytes!&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FourBytes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;_2&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EightBytes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;_3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xffffffff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;_4&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sizeof(FourBytes)=%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FourBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sizeof(EightBytes)=%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EightBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><category term="c" /><category term="cpp" /><summary type="html">Introduction Save the below code in a file named enum.c and try to compile it using the following command: gcc enum.c -o enum &amp;amp;&amp;amp; ./enum. This will give the following error: enum.c:8:3: error: overflow in enumeration values _4 ^ enum.c: In function ‘main’: enum.c:11:48: error: ‘FourBytes’ undeclared (first use in this function) printf(&quot;sizeof(FourBytes)=%d\n&quot;, (int)sizeof(FourBytes)); ^ enum.c:11:48: note: each undeclared identifier is reported only once for each function it appears in enum.c:12:49: error: ‘EightBytes’ undeclared (first use in this function) printf(&quot;sizeof(EightBytes)=%d\n&quot;, (int)sizeof(EightBytes));</summary></entry><entry><title type="html">Teditor v1.3.0</title><link href="https://teju85.github.io/blog/2019/08/11/teditor.html" rel="alternate" type="text/html" title="Teditor v1.3.0" /><published>2019-08-11T00:00:00+05:30</published><updated>2019-08-11T00:00:00+05:30</updated><id>https://teju85.github.io/blog/2019/08/11/teditor</id><content type="html" xml:base="https://teju85.github.io/blog/2019/08/11/teditor.html">&lt;h3 id=&quot;teditor-v130&quot;&gt;Teditor v1.3.0!&lt;/h3&gt;
&lt;p&gt;Glad to announce the release of the next version of teditor: v1.3.0. It
can be found &lt;a href=&quot;https://github.com/teju85/teditor/releases/tag/1.3.0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;changelog&quot;&gt;Changelog&lt;/h3&gt;
&lt;p&gt;Changes/features in this release:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Adds support for ledger-like text file based syntax for personal finanace
accounting.&lt;/li&gt;
  &lt;li&gt;Reintroduces proper kill-line command based on the new undo/redo stack.&lt;/li&gt;
  &lt;li&gt;More unittests improve coverage&lt;/li&gt;
  &lt;li&gt;Bug fixes to the undo/redo for insert-char command.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;ledger-mode&quot;&gt;Ledger Mode&lt;/h3&gt;
&lt;p&gt;To start using this for tracking your personal finances:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Create a file named &lt;code class=&quot;highlighter-rouge&quot;&gt;ledger.lg&lt;/code&gt; inside your &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.teditor&lt;/code&gt; folder. (one can
also create such a file elsewhere and then use the &lt;code class=&quot;highlighter-rouge&quot;&gt;-ledger-file&lt;/code&gt; option)&lt;/li&gt;
  &lt;li&gt;Refer to the file &lt;code class=&quot;highlighter-rouge&quot;&gt;samples/ledger/sample.lg&lt;/code&gt; to know its syntax. It is very
simplified version of the &lt;a href=&quot;https://www.ledger-cli.org/&quot;&gt;ledger-cli&lt;/a&gt; syntax.&lt;/li&gt;
  &lt;li&gt;Once you have this file populated with information, get back to the teditor
window and press &lt;code class=&quot;highlighter-rouge&quot;&gt;C-l C-d&lt;/code&gt; in order to see the summary of your transactions.&lt;/li&gt;
  &lt;li&gt;By default, it shows a summary report of all transactions grouped under the
top-level accounts. Press &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; to show them for all accounts.&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="teditor" /><summary type="html">Teditor v1.3.0! Glad to announce the release of the next version of teditor: v1.3.0. It can be found here.</summary></entry><entry><title type="html">Teditor v1.2.0</title><link href="https://teju85.github.io/blog/2019/08/07/teditor.html" rel="alternate" type="text/html" title="Teditor v1.2.0" /><published>2019-08-07T00:00:00+05:30</published><updated>2019-08-07T00:00:00+05:30</updated><id>https://teju85.github.io/blog/2019/08/07/teditor</id><content type="html" xml:base="https://teju85.github.io/blog/2019/08/07/teditor.html">&lt;h3 id=&quot;teditor-v120&quot;&gt;Teditor v1.2.0!&lt;/h3&gt;
&lt;p&gt;Glad to announce the release of the next version of teditor: v1.2.0. It
can be found &lt;a href=&quot;https://github.com/teju85/teditor/releases/tag/1.2.0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;changelog&quot;&gt;Changelog&lt;/h3&gt;
&lt;p&gt;Changes/features in this release:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Various fixes to the bugs in draw calls of the main window&lt;/li&gt;
  &lt;li&gt;Proper resizing now handled directly by Windows class, out of Buffer class&lt;/li&gt;
  &lt;li&gt;Full support for a vertical window split&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="teditor" /><summary type="html">Teditor v1.2.0! Glad to announce the release of the next version of teditor: v1.2.0. It can be found here.</summary></entry></feed>