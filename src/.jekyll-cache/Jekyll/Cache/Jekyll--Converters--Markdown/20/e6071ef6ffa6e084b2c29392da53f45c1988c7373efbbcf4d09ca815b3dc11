I"<h3 id="gpu-multisplit">GPU Multisplit</h3>
<p>Main paper can be found <a href="http://delivery.acm.org/10.1145/2860000/2851169/a12-ashkiani.pdf?ip=121.244.166.165&amp;id=2851169&amp;acc=ACTIVE%20SERVICE&amp;key=D494438A622BF6CC%2ED494438A622BF6CC%2E4D4702B0C3E38B35%2E4D4702B0C3E38B35&amp;__acm__=1561962172_44fee4c400764be9c464ccd99ad0ab9d">here</a>
and their reference implementation is <a href="https://github.com/owensgroup/GpuMultisplit">here</a>.</p>

<ul>
  <li>efficiently bucketizing arrays based on keys</li>
  <li>only small number of buckets are considered here (2 - 64)</li>
  <li>for these cases, such an implementation will be much faster than full sort</li>
  <li>Idea is to split the algo into 3 phases
    <ul>
      <li>local - compute bucket histograms and their scans</li>
      <li>global - compute global location of each element</li>
      <li>local - compute local location of each element and perform scatter</li>
    </ul>
  </li>
  <li>They also perform local multisplit to reduce memory divergence!</li>
</ul>
:ET